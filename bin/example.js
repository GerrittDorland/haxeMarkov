// Generated by Haxe 3.3.0
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function() { };
EReg.__name__ = true;
var MainIntermediate = function() {
	var app = new js_npm_Express();
	new de_polygonal_core_math_random_ParkMiller().setSeed(new Date().getTime() | 0);
	app.set("port",3000);
	app.set("view engine","jade");
	app["use"](new js_npm_express_Favicon(__dirname + "/favicon.ico"));
	app["use"](js_npm_express_BodyParser.urlencoded({ extended : true}));
	app["use"](js_npm_express_BodyParser.json());
	app["use"](js_npm_express_BodyParser.urlencoded());
	app["use"](new js_npm_express_Static(js_node_Path.join(__dirname,"public")));
	app.get("/",function(req,res) {
		res.sendfile(__dirname + "/views/test.html");
	});
	app.post("/index",function(req1,res1) {
		res1.sendfile(__dirname + "/views/test.html");
	});
	app.post("/getOutput",function(req2,res2) {
		res2.render("output",{ words : "test"});
	});
	app.post("/submitted",function(req3,res3) {
		res3.sendfile(__dirname + "/views/test.html");
		MainIntermediate.saveText(req3.param("message"));
	});
	app["use"](function(req4,res4,next) {
		res4.status(404).send("404");
	});
	app.listen(app.get("port"),function() {
		console.log("Express server listening on port " + Std.string(app.get("port")));
	});
};
MainIntermediate.__name__ = true;
MainIntermediate.main = function() {
	new MainIntermediate();
};
MainIntermediate.saveText = function(input) {
	console.log(input);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var de_polygonal_core_math_Limits = function() { };
de_polygonal_core_math_Limits.__name__ = true;
var de_polygonal_core_math_Mathematics = function() { };
de_polygonal_core_math_Mathematics.__name__ = true;
de_polygonal_core_math_Mathematics.toRad = function(deg) {
	return deg * 0.017453292519943295;
};
de_polygonal_core_math_Mathematics.toDeg = function(rad) {
	return rad * 57.29577951308232;
};
de_polygonal_core_math_Mathematics.min = function(x,y) {
	if(x < y) {
		return x;
	} else {
		return y;
	}
};
de_polygonal_core_math_Mathematics.max = function(x,y) {
	if(x > y) {
		return x;
	} else {
		return y;
	}
};
de_polygonal_core_math_Mathematics.abs = function(x) {
	if(x < 0) {
		return -x;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.sgn = function(x) {
	if(x > 0) {
		return 1;
	} else if(x < 0) {
		return -1;
	} else {
		return 0;
	}
};
de_polygonal_core_math_Mathematics.clamp = function(x,min,max) {
	if(x < min) {
		return min;
	} else if(x > max) {
		return max;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.clampSym = function(x,i) {
	if(x < -i) {
		return -i;
	} else if(x > i) {
		return i;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.wrap = function(x,min,max) {
	if(x < min) {
		return x - min + max + 1;
	} else if(x > max) {
		return x - max + min - 1;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.fmin = function(x,y) {
	if(x < y) {
		return x;
	} else {
		return y;
	}
};
de_polygonal_core_math_Mathematics.fmax = function(x,y) {
	if(x > y) {
		return x;
	} else {
		return y;
	}
};
de_polygonal_core_math_Mathematics.fabs = function(x) {
	if(x < 0) {
		return -x;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.fsgn = function(x) {
	if(x > 0.) {
		return 1;
	} else if(x < 0.) {
		return -1;
	} else {
		return 0;
	}
};
de_polygonal_core_math_Mathematics.fclamp = function(x,min,max) {
	if(x < min) {
		return min;
	} else if(x > max) {
		return max;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.fclampSym = function(x,i) {
	if(x < -i) {
		return -i;
	} else if(x > i) {
		return i;
	} else {
		return x;
	}
};
de_polygonal_core_math_Mathematics.fwrap = function(value,lower,upper) {
	return value - ((value - lower) / (upper - lower) | 0) * (upper - lower);
};
de_polygonal_core_math_Mathematics.eqSgn = function(x,y) {
	return (x ^ y) >= 0;
};
de_polygonal_core_math_Mathematics.isEven = function(x) {
	return (x & 1) == 0;
};
de_polygonal_core_math_Mathematics.isPow2 = function(x) {
	if(x > 0) {
		return (x & x - 1) == 0;
	} else {
		return false;
	}
};
de_polygonal_core_math_Mathematics.lerp = function(a,b,t) {
	return a + (b - a) * t;
};
de_polygonal_core_math_Mathematics.slerp = function(a,b,t) {
	var m = Math;
	var c1 = m.sin(a * .5);
	var r1 = m.cos(a * .5);
	var c2 = m.sin(b * .5);
	var r2 = m.cos(b * .5);
	var c = r1 * r2 + c1 * c2;
	if(c < 0.) {
		if(1. + c > 1e-6) {
			var o = m.acos(-c);
			var s = m.sin(o);
			var s0 = m.sin((1 - t) * o) / s;
			var s1 = m.sin(t * o) / s;
			return m.atan2(s0 * c1 - s1 * c2,s0 * r1 - s1 * r2) * 2.;
		} else {
			var s01 = 1 - t;
			return m.atan2(s01 * c1 - t * c2,s01 * r1 - t * r2) * 2;
		}
	} else if(1 - c > 1e-6) {
		var o1 = m.acos(c);
		var s2 = m.sin(o1);
		var s02 = m.sin((1 - t) * o1) / s2;
		var s11 = m.sin(t * o1) / s2;
		return m.atan2(s02 * c1 + s11 * c2,s02 * r1 + s11 * r2) * 2.;
	} else {
		var s03 = 1 - t;
		return m.atan2(s03 * c1 + t * c2,s03 * r1 + t * r2) * 2.;
	}
};
de_polygonal_core_math_Mathematics.nextPow2 = function(x) {
	var t = x - 1;
	t |= t >> 1;
	t |= t >> 2;
	t |= t >> 4;
	t |= t >> 8;
	t |= t >> 16;
	return t + 1;
};
de_polygonal_core_math_Mathematics.exp = function(a,n) {
	var t = 1;
	var r = 0;
	while(true) {
		if((n & 1) != 0) {
			t = a * t;
		}
		n >>= 1;
		if(n == 0) {
			r = t;
			break;
		} else {
			a *= a;
		}
	}
	return r;
};
de_polygonal_core_math_Mathematics.log10 = function(x) {
	return Math.log(x) * 0.4342944819032517;
};
de_polygonal_core_math_Mathematics.roundTo = function(x,y) {
	return Math.round(x / y) * y;
};
de_polygonal_core_math_Mathematics.round = function(x) {
	return (x + 16384.5 | 0) - 16384;
};
de_polygonal_core_math_Mathematics.ceil = function(x) {
	var f = x | 0;
	if(x == f) {
		return f;
	} else {
		++x;
		var f1 = x | 0;
		if(x < 0 && f1 != x) {
			--f1;
		}
		return f1;
	}
};
de_polygonal_core_math_Mathematics.floor = function(x) {
	var f = x | 0;
	if(x < 0 && f != x) {
		--f;
	}
	return f;
};
de_polygonal_core_math_Mathematics.sqrt = function(x) {
	return Math.sqrt(x);
};
de_polygonal_core_math_Mathematics.invSqrt = function(x) {
	return 1 / Math.sqrt(x);
};
de_polygonal_core_math_Mathematics.cmpAbs = function(x,y,eps) {
	var d = x - y;
	if(d > 0) {
		return d < eps;
	} else {
		return -d < eps;
	}
};
de_polygonal_core_math_Mathematics.cmpZero = function(x,eps) {
	if(x > 0) {
		return x < eps;
	} else {
		return -x < eps;
	}
};
de_polygonal_core_math_Mathematics.snap = function(x,y) {
	var x1 = (x + y * .5) / y;
	var f = x1 | 0;
	if(x1 < 0 && f != x1) {
		--f;
	}
	return f;
};
de_polygonal_core_math_Mathematics.inRange = function(x,min,max) {
	if(x >= min) {
		return x <= max;
	} else {
		return false;
	}
};
de_polygonal_core_math_Mathematics.wrapToPI = function(x) {
	x += 3.141592653589793;
	return x - 6.283185307179586 * Math.floor(x / 6.283185307179586) - 3.141592653589793;
};
de_polygonal_core_math_Mathematics.wrapToPI2 = function(x) {
	return x - 6.283185307179586 * Math.floor(x / 6.283185307179586);
};
de_polygonal_core_math_Mathematics.gcd = function(x,y) {
	var d = 0;
	var r = 0;
	if(x < 0) {
		x = -x;
	} else {
		x = x;
	}
	if(y < 0) {
		y = -y;
	} else {
		y = y;
	}
	while(true) if(y == 0) {
		d = x;
		break;
	} else {
		r = x % y;
		x = y;
		y = r;
	}
	return d;
};
de_polygonal_core_math_Mathematics.maxPrecision = function(x,precision) {
	var y = Math.pow(10,-precision);
	return Math.round(x / y) * y;
};
de_polygonal_core_math_Mathematics.ofBool = function(x) {
	if(x) {
		return 1;
	} else {
		return 0;
	}
};
var de_polygonal_core_math_random_RNG = function() {
	this._seed = 0;
};
de_polygonal_core_math_random_RNG.__name__ = true;
de_polygonal_core_math_random_RNG.prototype = {
	getSeed: function() {
		return this._seed;
	}
	,setSeed: function(seed) {
		this._seed = seed;
	}
	,random: function() {
		throw new js__$Boot_HaxeError("override for implementation");
	}
	,randomFloat: function() {
		throw new js__$Boot_HaxeError("override for implementation");
	}
	,randomRange: function(min,max) {
		var l = min - .4999;
		return (l + (max + .4999 - l) * this.randomFloat() + 16384.5 | 0) - 16384;
	}
	,randomFloatRange: function(min,max) {
		return min + (max - min) * this.randomFloat();
	}
	,randomSym: function(range) {
		var l = -range - .4999;
		return (l + (range + .4999 - l) * this.randomFloat() + 16384.5 | 0) - 16384;
	}
	,randomFloatSym: function(range) {
		var min = -range;
		return min + (range - min) * this.randomFloat();
	}
};
var de_polygonal_core_math_random_ParkMiller = function(seed) {
	if(seed == null) {
		seed = 1;
	}
	de_polygonal_core_math_random_RNG.call(this);
	this.setSeed(seed);
};
de_polygonal_core_math_random_ParkMiller.__name__ = true;
de_polygonal_core_math_random_ParkMiller.__super__ = de_polygonal_core_math_random_RNG;
de_polygonal_core_math_random_ParkMiller.prototype = $extend(de_polygonal_core_math_random_RNG.prototype,{
	setSeed: function(seed) {
		de_polygonal_core_math_random_RNG.prototype.setSeed.call(this,seed);
		this._fseed = seed;
	}
	,random: function() {
		this._fseed = this._fseed * 16807. % 2147483647.;
		return this._fseed;
	}
	,randomFloat: function() {
		return this.random() / 2147483647.;
	}
});
var de_polygonal_core_util_Assert = function() { };
de_polygonal_core_util_Assert.__name__ = true;
var haxe_io_Bytes = function() { };
haxe_io_Bytes.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_npm_Express = require("express");
var js_npm_express_BodyParser = require("body-parser");
var js_npm_express_Favicon = require("serve-favicon");
var js_npm_express__$Route_Route_$Impl_$ = {};
js_npm_express__$Route_Route_$Impl_$.__name__ = true;
js_npm_express__$Route_Route_$Impl_$.fromEReg = function(e) {
	return e.r;
};
var js_npm_express_Static = require("express").static;
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = ["Date"];
de_polygonal_core_math_Limits.INT8_MIN = -128;
de_polygonal_core_math_Limits.INT8_MAX = 127;
de_polygonal_core_math_Limits.UINT8_MAX = 255;
de_polygonal_core_math_Limits.INT16_MIN = -32768;
de_polygonal_core_math_Limits.INT16_MAX = 32767;
de_polygonal_core_math_Limits.UINT16_MAX = 65535;
de_polygonal_core_math_Limits.INT32_MIN = -2147483648;
de_polygonal_core_math_Limits.INT32_MAX = 2147483647;
de_polygonal_core_math_Limits.UINT32_MAX = -1;
de_polygonal_core_math_Limits.INT_BITS = 32;
de_polygonal_core_math_Limits.FLOAT_MAX = 3.4028234663852886e+38;
de_polygonal_core_math_Limits.FLOAT_MIN = -3.4028234663852886e+38;
de_polygonal_core_math_Limits.DOUBLE_MAX = 1.7976931348623157e+308;
de_polygonal_core_math_Limits.DOUBLE_MIN = -1.7976931348623157e+308;
de_polygonal_core_math_Mathematics.NaN = NaN;
de_polygonal_core_math_Mathematics.POSITIVE_INFINITY = Infinity;
de_polygonal_core_math_Mathematics.NEGATIVE_INFINITY = -Infinity;
de_polygonal_core_math_Mathematics.ZERO_TOLERANCE = 1e-08;
de_polygonal_core_math_Mathematics.RAD_DEG = 57.29577951308232;
de_polygonal_core_math_Mathematics.DEG_RAD = 0.017453292519943295;
de_polygonal_core_math_Mathematics.LN2 = 0.6931471805599453;
de_polygonal_core_math_Mathematics.LN10 = 2.302585092994046;
de_polygonal_core_math_Mathematics.PI_OVER_2 = 1.5707963267948966;
de_polygonal_core_math_Mathematics.PI_OVER_4 = 0.7853981633974483;
de_polygonal_core_math_Mathematics.PI = 3.141592653589793;
de_polygonal_core_math_Mathematics.PI2 = 6.283185307179586;
de_polygonal_core_math_Mathematics.EPS = 1e-6;
de_polygonal_core_math_Mathematics.SQRT2 = 1.414213562373095;
MainIntermediate.main();
})();
